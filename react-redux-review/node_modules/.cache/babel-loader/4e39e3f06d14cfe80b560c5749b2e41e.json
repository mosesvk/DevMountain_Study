{"ast":null,"code":"var _jsxFileName = \"/Users/mosesvk/Documents/Programming/DevMountain_Study/react-redux-review/src/components/MovieConfirm.js\";\nimport React from 'react';\nimport styles from './styles';\nimport { connect } from 'react-redux';\nimport { updateMovieList } from '../redux/movieReducer'; // both line 3 and 4 will be done at the bottom\n\nconst MovieConfirm = props => {\n  // the MovieConfirm component currently has a placerholder strings to Title, Rating and URL. Change those strings to references to our vaslues on props to make them display correctly\n  const {\n    title,\n    poster,\n    rating\n  } = props;\n\n  const confirmMovie = () => {\n    props.updateMovieList({\n      title,\n      poster,\n      rating\n    });\n    props.history.push('/list');\n  }; // Destructure title, poster, rating from  props so you can input them on lines 18-19 in the return. This will now show the title, poster, and rating that we inputted and stored it to the redux.\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: styles.containerHeading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"CONFIRM YOUR DETAILS\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: styles.confirmText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, `${title} - ${rating}`), /*#__PURE__*/React.createElement(\"img\", {\n    src: `${poster}`,\n    alt: \"Movie Poster\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => props.history.push('/'),\n    style: styles.formButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"BACK\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: confirmMovie,\n    style: styles.formButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"CONFIRM\")));\n}; //Create a function that destructures title, poster, andrating from our redux state and return it as an object containing those three values. \n\n\nconst mapStateToProps = state => {\n  const {\n    title,\n    poster,\n    rating\n  } = state;\n  return {\n    title,\n    poster,\n    rating\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateMovieList\n})(MovieConfirm);","map":{"version":3,"sources":["/Users/mosesvk/Documents/Programming/DevMountain_Study/react-redux-review/src/components/MovieConfirm.js"],"names":["React","styles","connect","updateMovieList","MovieConfirm","props","title","poster","rating","confirmMovie","history","push","container","containerHeading","confirmText","formButton","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,eAAR,QAA8B,uBAA9B,C,CACA;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAE9B;AACE,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,MAA0BH,KAAhC;;AACA,QAAMI,YAAY,GAAG,MAAM;AACzBJ,IAAAA,KAAK,CAACF,eAAN,CAAsB;AAACG,MAAAA,KAAD;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA;AAAhB,KAAtB;AACAH,IAAAA,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,OAAnB;AACD,GAHD,CAJ4B,CAS5B;;;AAGA,sBACE;AAAK,IAAA,KAAK,EAAEV,MAAM,CAACW,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,KAAK,EAAEX,MAAM,CAACY,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAG,IAAA,KAAK,EAAEZ,MAAM,CAACa,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC,GAAER,KAAM,MAAKE,MAAO,EAApD,CAFF,eAGE;AAAK,IAAA,GAAG,EAAG,GAAED,MAAO,EAApB;AAAuB,IAAA,GAAG,EAAC,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAE,MAAMF,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CADjB;AAEE,IAAA,KAAK,EAAEV,MAAM,CAACc,UAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAQ,IAAA,OAAO,EAAEN,YAAjB;AAA+B,IAAA,KAAK,EAAER,MAAM,CAACc,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,CAJF,CADF;AAkBD,CA9BD,C,CAgCA;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAACX,IAAAA,KAAD;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,MAA0BS,KAAhC;AACA,SAAO;AACLX,IAAAA,KADK;AAELC,IAAAA,MAFK;AAGLC,IAAAA;AAHK,GAAP;AAKD,CAPD;;AASA,eAAeN,OAAO,CAACc,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAP,CAA4CC,YAA5C,CAAf","sourcesContent":["import React from 'react'\nimport styles from './styles'\nimport {connect} from 'react-redux'\nimport {updateMovieList} from '../redux/movieReducer'\n// both line 3 and 4 will be done at the bottom\n\nconst MovieConfirm = props => {\n\n// the MovieConfirm component currently has a placerholder strings to Title, Rating and URL. Change those strings to references to our vaslues on props to make them display correctly\n  const {title, poster, rating} = props\n  const confirmMovie = () => {\n    props.updateMovieList({title, poster, rating})\n    props.history.push('/list')\n  }\n\n  // Destructure title, poster, rating from  props so you can input them on lines 18-19 in the return. This will now show the title, poster, and rating that we inputted and stored it to the redux.\n\n\n  return (\n    <div style={styles.container}>\n      <p style={styles.containerHeading}>CONFIRM YOUR DETAILS</p>\n      <p style={styles.confirmText}>{`${title} - ${rating}`}</p>\n      <img src={`${poster}`} alt=\"Movie Poster\" />\n      <div>\n        <button\n          onClick={() => props.history.push('/')}\n          style={styles.formButton}\n        >\n          BACK\n        </button>\n        <button onClick={confirmMovie} style={styles.formButton}>\n          CONFIRM\n        </button>\n      </div>\n    </div>\n  )\n}\n\n//Create a function that destructures title, poster, andrating from our redux state and return it as an object containing those three values. \n\nconst mapStateToProps = (state) => {\n  const {title, poster, rating} = state\n  return {\n    title,\n    poster, \n    rating\n  }\n}\n\nexport default connect(mapStateToProps, {updateMovieList})(MovieConfirm)\n"]},"metadata":{},"sourceType":"module"}